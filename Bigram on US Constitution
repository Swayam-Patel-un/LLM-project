{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e84b2e26",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T21:09:12.571240Z",
     "iopub.status.busy": "2024-07-11T21:09:12.570398Z",
     "iopub.status.idle": "2024-07-11T21:09:16.467069Z",
     "shell.execute_reply": "2024-07-11T21:09:16.465870Z"
    },
    "papermill": {
     "duration": 3.904538,
     "end_time": "2024-07-11T21:09:16.469601",
     "exception": false,
     "start_time": "2024-07-11T21:09:12.565063",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "cuda\n"
     ]
    }
   ],
   "source": [
    "import torch\n",
    "import torch.nn as nn\n",
    "from torch.nn import functional as f\n",
    "device='cuda' if torch.cuda.is_available() else 'cpu'\n",
    "print(device)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c8df5a53",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T21:09:16.477816Z",
     "iopub.status.busy": "2024-07-11T21:09:16.477439Z",
     "iopub.status.idle": "2024-07-11T21:09:18.882461Z",
     "shell.execute_reply": "2024-07-11T21:09:18.881125Z"
    },
    "papermill": {
     "duration": 2.412307,
     "end_time": "2024-07-11T21:09:18.885592",
     "exception": false,
     "start_time": "2024-07-11T21:09:16.473285",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--2024-07-11 21:09:17--  https://github.com/Swayam-Patel-un/LLM-project/blob/main/The_US_Constitution.txt\r\n",
      "Resolving github.com (github.com)... 20.27.177.113\r\n",
      "Connecting to github.com (github.com)|20.27.177.113|:443... connected.\r\n",
      "HTTP request sent, awaiting response... 200 OK\r\n",
      "Length: unspecified [text/html]\r\n",
      "Saving to: 'The_US_Constitution.txt'\r\n",
      "\r\n",
      "The_US_Constitution     [  <=>               ] 772.04K  2.59MB/s    in 0.3s    \r\n",
      "\r\n",
      "2024-07-11 21:09:18 (2.59 MB/s) - 'The_US_Constitution.txt' saved [790574]\r\n",
      "\r\n"
     ]
    }
   ],
   "source": [
    "!wget https://github.com/Swayam-Patel-un/LLM-project/blob/main/The_US_Constitution.txt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e19919fe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T21:09:18.898534Z",
     "iopub.status.busy": "2024-07-11T21:09:18.898137Z",
     "iopub.status.idle": "2024-07-11T21:09:18.918718Z",
     "shell.execute_reply": "2024-07-11T21:09:18.917642Z"
    },
    "papermill": {
     "duration": 0.029613,
     "end_time": "2024-07-11T21:09:18.921090",
     "exception": false,
     "start_time": "2024-07-11T21:09:18.891477",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "790558\n",
      "['\\n', ' ', '!', '\"', '#', '$', '%', '&', \"'\", '(', ')', '*', '+', ',', '-', '.', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '}', '\\xa0', '·', '’', '\\ufeff']\n",
      "97\n"
     ]
    }
   ],
   "source": [
    "with open(\"The_US_Constitution.txt\",\"r\",encoding=\"utf-8\") as f:\n",
    "    text=f.read()\n",
    "    \n",
    "print(len(text))\n",
    "char=sorted(set(text))\n",
    "print(char)\n",
    "print(len(char))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "99e5e660",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T21:09:18.930876Z",
     "iopub.status.busy": "2024-07-11T21:09:18.930553Z",
     "iopub.status.idle": "2024-07-11T21:09:18.942205Z",
     "shell.execute_reply": "2024-07-11T21:09:18.941237Z"
    },
    "papermill": {
     "duration": 0.020071,
     "end_time": "2024-07-11T21:09:18.945458",
     "exception": false,
     "start_time": "2024-07-11T21:09:18.925387",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[34, 77, 69, 82, 73, 67, 65]\n",
      "America\n"
     ]
    }
   ],
   "source": [
    "str_to_int = { ch:i for i,ch in enumerate(char) }\n",
    "int_to_str = { i:ch for i,ch in enumerate(char) }\n",
    "encode = lambda s: [str_to_int[c] for c in s]\n",
    "decode = lambda l: ''.join([int_to_str[i] for i in l])\n",
    "\n",
    "print(encode('America'))\n",
    "decode_am=decode(encode('America'))\n",
    "print(decode_am)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "5598e1cb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T21:09:18.956727Z",
     "iopub.status.busy": "2024-07-11T21:09:18.955845Z",
     "iopub.status.idle": "2024-07-11T21:09:19.199143Z",
     "shell.execute_reply": "2024-07-11T21:09:19.197813Z"
    },
    "papermill": {
     "duration": 0.250913,
     "end_time": "2024-07-11T21:09:19.201431",
     "exception": false,
     "start_time": "2024-07-11T21:09:18.950518",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tensor([ 0,  0,  0,  0,  0,  0, 29,  2, 37, 48, 36, 53, 58, 49, 38,  1, 72, 84,\n",
      "        77, 76, 31,  0, 29, 72, 84, 77, 76,  0,  1,  1, 76, 65, 78, 71, 30,  3,\n",
      "        69, 78,  3,  0,  1,  1,  0,  1,  1, 68, 65, 84, 65, 14, 67, 79, 76, 79,\n",
      "        82, 14, 77, 79, 68, 69, 30,  3, 65, 85, 84, 79,  3,  1, 68, 65, 84, 65,\n",
      "        14, 76, 73, 71, 72, 84, 14, 84, 72, 69, 77, 69, 30,  3, 76, 73, 71, 72,\n",
      "        84,  3,  1, 68, 65, 84, 65, 14, 68, 65])\n"
     ]
    }
   ],
   "source": [
    "data=torch.tensor(encode(text), dtype=torch.long)\n",
    "print(data[:100])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "83e6cc88",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T21:09:19.211972Z",
     "iopub.status.busy": "2024-07-11T21:09:19.211183Z",
     "iopub.status.idle": "2024-07-11T21:09:19.221326Z",
     "shell.execute_reply": "2024-07-11T21:09:19.219774Z"
    },
    "papermill": {
     "duration": 0.018392,
     "end_time": "2024-07-11T21:09:19.224211",
     "exception": false,
     "start_time": "2024-07-11T21:09:19.205819",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "When input is  tensor([0])  target is  tensor(0)\n",
      "When input is  tensor([0, 0])  target is  tensor(0)\n",
      "When input is  tensor([0, 0, 0])  target is  tensor(0)\n",
      "When input is  tensor([0, 0, 0, 0])  target is  tensor(0)\n",
      "When input is  tensor([0, 0, 0, 0, 0])  target is  tensor(0)\n",
      "When input is  tensor([0, 0, 0, 0, 0, 0])  target is  tensor(29)\n",
      "When input is  tensor([ 0,  0,  0,  0,  0,  0, 29])  target is  tensor(2)\n"
     ]
    }
   ],
   "source": [
    "n=int(0.75*len(data))\n",
    "train=data[:n]\n",
    "test=data[n:]\n",
    "blocksize=7\n",
    "batchsize=5\n",
    "x=train[:blocksize]\n",
    "y=train[1:blocksize+1]\n",
    "for i in range(blocksize):\n",
    "    cont=x[:i+1]\n",
    "    tar=y[i]\n",
    "    print(\"When input is \",cont,\" target is \",tar)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "d9298422",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T21:09:19.237366Z",
     "iopub.status.busy": "2024-07-11T21:09:19.236376Z",
     "iopub.status.idle": "2024-07-11T21:09:19.424077Z",
     "shell.execute_reply": "2024-07-11T21:09:19.422941Z"
    },
    "papermill": {
     "duration": 0.196007,
     "end_time": "2024-07-11T21:09:19.426177",
     "exception": false,
     "start_time": "2024-07-11T21:09:19.230170",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tensor([448745, 306038,  14415, 387317,  78738])\n",
      "inputs:\n",
      "tensor([[82, 69, 65, 67, 84, 14, 76],\n",
      "        [53, 34, 88, 56, 58, 27, 72],\n",
      "        [84, 83, 16, 86, 69, 78, 68],\n",
      "        [80, 80, 69, 82, 14, 83, 67],\n",
      "        [77, 79, 68, 65, 76, 14, 68]], device='cuda:0')\n",
      "targets:\n",
      "tensor([[69, 65, 67, 84, 14, 76, 73],\n",
      "        [34, 88, 56, 58, 27, 72, 79],\n",
      "        [83, 16, 86, 69, 78, 68, 79],\n",
      "        [80, 69, 82, 14, 83, 67, 14],\n",
      "        [79, 68, 65, 76, 14, 68, 73]], device='cuda:0')\n"
     ]
    }
   ],
   "source": [
    "def get_batch(split):\n",
    "    data=train if split=='train' else test\n",
    "    ix=torch.randint(len(data)-blocksize,(batchsize,))\n",
    "    print(ix)\n",
    "    x=torch.stack([data[i:i+blocksize] for i in ix])\n",
    "    y=torch.stack([data[i+1:i+blocksize+1] for i in ix])\n",
    "    x,y=x.to(device),y.to(device)\n",
    "    return x, y\n",
    "\n",
    "x,y=get_batch('train')\n",
    "print(\"inputs:\")\n",
    "print(x)\n",
    "print(\"targets:\")\n",
    "print(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "80dd3d17",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-11T21:09:19.436771Z",
     "iopub.status.busy": "2024-07-11T21:09:19.436099Z",
     "iopub.status.idle": "2024-07-11T21:09:19.440261Z",
     "shell.execute_reply": "2024-07-11T21:09:19.439430Z"
    },
    "papermill": {
     "duration": 0.011477,
     "end_time": "2024-07-11T21:09:19.442227",
     "exception": false,
     "start_time": "2024-07-11T21:09:19.430750",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#class BigramLanguage(nn.Module):\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "85debf03",
   "metadata": {
    "papermill": {
     "duration": 0.00412,
     "end_time": "2024-07-11T21:09:19.450678",
     "exception": false,
     "start_time": "2024-07-11T21:09:19.446558",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "gpu",
   "dataSources": [
    {
     "datasetId": 5374442,
     "sourceId": 8933450,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30747,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 10.832966,
   "end_time": "2024-07-11T21:09:20.575796",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-07-11T21:09:09.742830",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
